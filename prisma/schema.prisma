// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  phone     String?
  company   String?
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  customers Customer[]
  sales     Sale[]
}

model Customer {
  id          String   @id @default(cuid())
  name        String
  phone       String?
  email       String?
  address     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  sales       Sale[]
  
  @@index([userId])
}

model Sale {
  id          String   @id @default(cuid())
  invoiceNo   String   @unique
  customerId  String
  userId      String
  items       Json     // Store items as JSON array
  totalAmount Float
  paidAmount  Float    @default(0)
  dueAmount   Float
  paymentType String   // "cash", "credit", "partial"
  status      String   @default("pending") // "pending", "partial", "paid"
  dueDate     DateTime?
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  customer    Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  payments    Payment[]
  
  @@index([userId])
  @@index([customerId])
}

model Payment {
  id        String   @id @default(cuid())
  saleId    String
  amount    Float
  method    String   // "cash", "upi", "bank"
  notes     String?
  createdAt DateTime @default(now())
  
  sale      Sale     @relation(fields: [saleId], references: [id], onDelete: Cascade)
  
  @@index([saleId])
}